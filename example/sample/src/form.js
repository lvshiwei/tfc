/**
 * @overview A form component generated by tfc.
 * @author your.name@corp.com
 */
import React from 'react';
import classnames from 'classnames';
import schema from './schema';
import fooky from 'fooky';
import { List, InputItem, Picker, Button, DatePicker } from 'antd-mobile';
/**
 * Say something to avoid warnning from eslint
 */

export default function () {
  const { useModel, useValidation } = fooky;
  console.log(fooky);
  const [model, setModel] = useModel({});
  const { validate, hasError } = useValidation(schema);

  const handleSubmit = () =>
    validate(model)
      .then(() => alert('Amazing!!'))
      .catch(console.error);

  const handleChangeInput = (name) => (value) => setModel(name, value);

  const handleLeaveInput = (name) => () => validate(name, model[name]);

  const handleChangeSelect = (name) => (value) => {
    setModel(name, value);
    validate(name, value);
  };

  const renderClassName = (name, properties) =>
    classnames(...(properties || []), {
      error: hasError(name),
      hasValue: !(model[name] === null || typeof model[name] === 'undefined'),
    });

  const Required = () => <i className="required">*</i>;

  return (
    <div className="form-wrapper">
      <List>
        <InputItem
          className={renderClassName('location')}
          onChange={handleChangeInput('location')}
          onBlur={handleLeaveInput('location')}
        >
          地址
        </InputItem>
        <InputItem
          className={renderClassName('longitude')}
          onChange={handleChangeInput('longitude')}
          onBlur={handleLeaveInput('longitude')}
        >
          经度
        </InputItem>
        <InputItem
          className={renderClassName('latitude')}
          onChange={handleChangeInput('latitude')}
          onBlur={handleLeaveInput('latitude')}
        >
          纬度
        </InputItem>
        <DatePicker mode="date" onChange={handleChangeSelect('start')}>
          <List.Item arrow="horizontal" className={renderClassName('start')}>
            日期
            <Required />
          </List.Item>
        </DatePicker>
        <InputItem
          className={renderClassName('amount')}
          onChange={handleChangeInput('amount')}
          onBlur={handleLeaveInput('amount')}
        ></InputItem>
        <InputItem
          className={renderClassName('active')}
          onChange={handleChangeInput('active')}
          onBlur={handleLeaveInput('active')}
        >
          立刻生效
          <Required />
        </InputItem>
      </List>
      <Button onClick={handleSubmit}>submit</Button>
    </div>
  );
}
